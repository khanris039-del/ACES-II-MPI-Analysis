
# imports
from glob import glob
import io
import numpy as np


# get all text files
path_to_folder = r'C:\Users\riskh\OneDrive - University of Iowa\ACESII-MPI Project'
text_file_paths = glob(path_to_folder+'\\*.txt*')



# Load JUST ONE .txt file
file = text_file_paths[1] # note: index 1 is the data description
temp_data = []

with io.open(file, mode="r", encoding="utf-8") as f:

    next(f) # this skips the first line in the .txt file
    for line in f:
        temp_data.append([float(val) for val in line.split()])

    temp_data = np.array(temp_data).T

    for line in f:
        temp_arr_str = line.split()
        temp_arr_float = [float(thing) for thing in temp_arr_str]
        temp_data.append(temp_arr_float)

data = np.array(temp_data)
var1 = data[:, 0:77]
print(var1)

example_attrs = {'LABLAXIS': None,
                 'DEPEND_0': None,
                 'UNITS': None}

data_dict_output = {
    'arissa': [[], {}],
    'khan': [[], {}]
}

# [2] fill in the attributes of your data_dict_output
data_dict_output['arissa'][1] = deepcopy(example_attrs)
data_dict_output['khan'][1] = deepcopy(example_attrs)

# actually update your attributes
data_dict_output['arissa'][1]['UNITS'] = 'm'
data_dict_output['arissa'][1]['LABLAXIS'] = 'Human?'

data_dict_output['khan'][1]['UNITS'] = 'feet'
data_dict_output['khan'][1]['DEPEND_0'] = 'arissa'

# fill in some test data
data_dict_output['arissa'][0] = np.array([ 3.87795383e+09,  3.87795383e+09,  3.87795384e+09,  3.87795384e+09,
   3.87795384e+09,  3.87795384e+09,  3.87795385e+09,  3.87795385e+09,
   3.87795385e+09,  3.87795385e+09,  3.87795386e+09,  3.87795386e+09,
   3.87795386e+09,  3.87795386e+09,  3.87795386e+09,  3.87795387e+09,
   3.87795387e+09,  3.87795387e+09,  3.87795387e+09,  3.87795388e+09,
   3.87795388e+09,  3.87795388e+09,  3.87795388e+09,  3.87795388e+09,
   3.87795388e+09,  3.87795389e+09,  3.87795389e+09,  3.87795389e+09,
   3.87795389e+09,  3.87795389e+09,  3.87795389e+09,  3.87795389e+09,
   3.87795389e+09,  3.87795390e+09,  3.87795390e+09,  3.87795390e+09,
   3.87795390e+09,  3.87795390e+09,  3.87795390e+09,  3.87795390e+09,
   3.87795390e+09,  3.87795390e+09,  3.87795390e+09,  3.87795391e+09,
   3.87795391e+09,  3.87795391e+09,  3.87795391e+09,  3.87795391e+09,
   3.87795391e+09,  3.87795391e+09,  3.87795391e+09,  3.87795392e+09
   3.87795392e+09  3.87795393e+09  3.87795393e+09  3.87795394e+09
   3.87795394e+09  3.87795394e+09  3.87795394e+09  3.87795394e+09
   3.87795394e+09  3.87795394e+09  3.87795394e+09  3.87795394e+09
   3.87795394e+09  3.87795394e+09  3.87795395e+09  3.87795395e+09
   3.87795395e+09  3.87795395e+09  3.87795395e+09  3.87795395e+09
   3.87795395e+09  3.87795395e+09  3.87795395e+09  3.87795395e+09
   3.87795395e+09]) #data MUST be numpy arrays when outputting a .cdf
data_dict_output['khan'][0] = np.array([-6.31700000e+01 -1.81200000e+02 -7.66700000e+01 -5.00300000e+01
  -9.12700000e+01 -4.13700000e+01 -2.01320000e+02 -3.81700000e+01
  -1.30730000e+02  3.12000000e+00 -1.10830000e+02 -2.33140000e+02
  -1.96000000e+01 -6.06600000e+01 -5.66200000e+01 -3.04400000e+01
  -2.23760000e+02 -3.33400000e+01 -2.77200000e+01 -9.13600000e+01
  -5.70700000e+01 -7.88200000e+01 -8.73000000e+01  9.83600000e+01
   1.10000000e+01 -1.23780000e+02  4.29900000e+01  2.46720000e+02
  -1.77000000e+02  2.81800000e+01 -3.56800000e+01 -4.78100000e+01
   6.82200000e+01  2.71420000e+02 -2.27710000e+02  1.08650000e+02
  -1.23430000e+02  0.00000000e+00  9.15000000e+00  2.00660000e+02
   1.70090000e+02 -2.15410000e+02  6.14400000e+01  2.94500000e+01
   1.05500000e+02  4.78200000e+01  8.87300000e+01 -1.21200000e+02
  -2.21600000e+01 -3.77600000e+01  7.78400000e+01 -1.14750000e+02
  -2.23530000e+02 -1.05360000e+02  1.28700000e+02  3.59000000e+00
  -8.43100000e+01  3.91100000e+01  1.07360000e+02  2.69070000e+02
  -1.66280000e+02  2.45130000e+02 -4.84000000e+00  3.82000000e+01
   2.29540000e+02 -2.09620000e+02  3.73240000e+02 -8.18000000e+01
   1.53270000e+02  9.07600000e+01  3.69000000e+01  1.78470000e+02
   2.64260000e+02 -8.57600000e+01  1.62810000e+02 -2.34800000e+01
   1.81050000e+02]) #data MUST be numpy arrays when outputting a .cdf
data_dict_output['blorb'][0] = np.array([-2.58570000e+02  2.58710000e+02  2.45810000e+02  1.94400000e+02
  -1.19370000e+02  1.41700000e+01  9.82000000e+00 -2.19860000e+02
   7.66700000e+01 -1.73980000e+02  9.09100000e+01 -1.45490000e+02
  -3.77600000e+01 -9.09600000e+01 -1.45780000e+02  1.38680000e+02
   2.57480000e+02 -1.55810000e+02 -1.20000000e-01  6.10200000e+01
   7.00500000e+01  3.54340000e+02  5.87700000e+01  3.93700000e+01
   2.67700000e+01  8.54900000e+01  3.55200000e+01 -1.44540000e+02
   6.81500000e+01  3.96500000e+01 -1.60620000e+02  1.60160000e+02
  -1.26190000e+02 -1.41210000e+02  3.57430000e+02  8.93900000e+01
   1.03820000e+02  2.15000000e+02 -4.61000000e+01 -3.08900000e+01
   1.24540000e+02  7.97600000e+01  7.78400000e+01  2.36000000e+00
  -5.25000000e+01 -6.81200000e+01 -1.55620000e+02 -4.14100000e+01
   1.14450000e+02 -8.83600000e+01  1.21740000e+02  8.04400000e+01
   4.52500000e+01 -1.20540000e+02  9.14300000e+01  8.79900000e+01
   1.60560000e+02 -7.78000000e+00  8.77000000e+01  2.47580000e+02
   1.82110000e+02  1.65780000e+02  6.68300000e+01  9.31500000e+01
   6.21900000e+01  8.95800000e+01  2.23990000e+02  1.59410000e+02
   2.05060000e+02  7.36300000e+01  4.82730000e+02  1.16680000e+02
   3.19870000e+02  2.25750000e+02  2.39160000e+02  1.84150000e+02
   1.93460000e+02])


# [3] actually outputting the data
file_out_path = r'C:\Users\riskh\OneDrive\New folder'
stl.outputCDFdata(outputPath=file_out_path, data_dict=data_dict_output)